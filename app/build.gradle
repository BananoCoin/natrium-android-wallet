apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "co.banano.natriumwallet"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 16
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions"
            }
        }
        // Enabling multidex support.
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "CONNECTION_URL", "\"wss://natrium.banano.cc:4443\""
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental false
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}

dependencies {
    final AWESOME_QRCODE_VERSION = '1.0.6'
    final FCM_VER = '16.0.5'
    final FCM_MSG_VER = '17.3.4'
    final CONSTRAINT_LAYOUT_VERSION = '2.0.0-alpha2'
    final APPCOMPAT_VERSION = '1.0.2'
    final MATERIAL_VERSION = '1.1.0-alpha01'
    final RECYCLERVIEW_VERSION = '1.0.0'
    final ANNOTATION_VERSION = '1.0.0'
    final LEGACY_SUPPORT_VERSION = '1.0.0'
    final DAGGER_VERSION = '2.19'
    final FINGERPRINT_VERSION = '3.3.0'
    final GSON_FIRE_VERSION = '1.8.2'
    final GSON_VERSION = '2.8.5'
    final JAVA_WS_VERSION = '1.3.9'
    final JNANO_VERSION = '1.5.0'
    final J_UNIT_VERSION = '4.12'
    final LOTTIE_VERSION = '2.8.0'
    final PINLOCKVIEW_VERSION = '2.1.0'
    final RX_ANDROID = '2.0.2'
    final RXBUS_VERSION = '2.0.0'
    final RX_JAVA_2 = '2.2.2'
    final TIMBER_VERSION = '4.7.0'
    final VAULT_VERSION = '1.4.2'
    final OKHTTP_VERSION = '3.11.0'
    final ZXING_VERSION = '1.9'
    implementation 'androidx.multidex:multidex:2.0.0'

    // Support
    implementation "androidx.appcompat:appcompat:$APPCOMPAT_VERSION"
    implementation "com.google.android.material:material:$MATERIAL_VERSION"
    implementation "androidx.recyclerview:recyclerview:$RECYCLERVIEW_VERSION"
    implementation "androidx.annotation:annotation:$ANNOTATION_VERSION"
    implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINT_LAYOUT_VERSION"
    implementation "androidx.legacy:legacy-support-v4:$LEGACY_SUPPORT_VERSION"

    // Dagger (dependency injection)
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    // Firebase
    implementation "com.google.firebase:firebase-core:$FCM_VER"
    implementation "com.google.firebase:firebase-messaging:$FCM_MSG_VER"

    // RX
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_2"
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID"

    // Bar Codes
    implementation "me.dm7.barcodescanner:zxing:$ZXING_VERSION"
    implementation "com.github.SumiMakito:AwesomeQRCode:$AWESOME_QRCODE_VERSION"

    // WebSocket
    implementation "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    implementation "org.java-websocket:Java-WebSocket:$JAVA_WS_VERSION"

    // JSON Serialization
    implementation "com.google.code.gson:gson:$GSON_VERSION"
    implementation "io.gsonfire:gson-fire:$GSON_FIRE_VERSION"

    // Fingerprint
    implementation "com.github.ajalt.reprint:core:$FINGERPRINT_VERSION@aar"
    implementation "com.github.ajalt.reprint:reprint_spass:$FINGERPRINT_VERSION@aar"
    implementation "com.github.ajalt.reprint:rxjava2:$FINGERPRINT_VERSION@aar"

    // Pin
    implementation "com.andrognito.pinlockview:pinlockview:$PINLOCKVIEW_VERSION"

    // Event Bus
    implementation("com.hwangjr.rxbus:rxbus:$RXBUS_VERSION") {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }

    // Secure storage
    implementation "com.bottlerocketstudios:vault:$VAULT_VERSION"

    // Logging
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"

    // Lottie Android
    implementation "com.airbnb.android:lottie:$LOTTIE_VERSION"

    // jnano-commons
    implementation "com.rotilho.jnano:jnano-commons:$JNANO_VERSION"

    // Testing
    testAnnotationProcessor("com.google.dagger:dagger-compiler:$DAGGER_VERSION")
    androidTestAnnotationProcessor("com.google.dagger:dagger-compiler:$DAGGER_VERSION")
    androidTestImplementation 'androidx.test:runner:1.1.1-alpha01'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    })
    testImplementation "junit:junit:$J_UNIT_VERSION"
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.mockito:mockito-core:2.8.9'
}

apply plugin: 'com.google.gms.google-services'
